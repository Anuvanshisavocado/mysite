name: Daily Repository Update # Descriptive name for your workflow

on:
  schedule:
    # This cron expression will schedule the workflow to run daily at 17:05 UTC.
    # You can adjust "5 17" to any specific minute and hour (UTC) you prefer.
    - cron: "42 15 * * *"
  workflow_dispatch: # This allows you to manually trigger the workflow from the GitHub UI

jobs:
  daily-commit: # Name for this job
    runs-on: ubuntu-latest # The type of machine to run the job on
    permissions:
      # THIS IS CRUCIAL: Grants write permissions to the GITHUB_TOKEN
      # so the workflow can push commits to your repository.
      contents: write

    steps:
      - name: Checkout repository # Step to get your repository's code
        uses: actions/checkout@v4 # Uses the official action to checkout your repo

      - name: Create or update a daily activity file - 23f3002037@ds.study.iitm.ac.in
        # This step's name includes your email as required.
        # It appends the current UTC timestamp to a file named 'daily-activity.log'.
        # This creates a detectable change that Git can commit each day.
        run: |
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") # Get current UTC timestamp
          echo "Daily update triggered on: $DATE" >> daily-activity.log # Append to file
          echo "This file tracks daily automated activity in the repository." >> daily-activity.log # Append another line

      - name: Commit and push changes # Step to commit the changes and push them
        run: |
          # Configure Git with the GitHub Actions bot's identity.
          # Using --local sets this for the current repository checkout only.
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Stage the 'daily-activity.log' file for commit.
          git add daily-activity.log
          
          # Create a commit.
          # --allow-empty if no changes (though our previous step ensures changes)
          # -m provides the commit message. [skip ci] prevents recursive workflow runs.
          git commit -m "Automated daily update: $(date -u +"%Y-%m-%d %H:%M UTC") [skip ci]" || exit 0
          
          # Push the committed changes to the 'main' branch.
          # Change 'main' to 'master' if that's your repository's default branch.
          git push origin main
