name: Daily Repository Update # Descriptive name for your workflow

on:
  schedule:
    # This cron expression will schedule the workflow to run daily at 00:00 UTC (midnight).
    # This fulfills the "runs once per day (must use specific hours/minutes, not wildcards)" requirement.
    # The assignment's "within 5 minutes" check refers to the commit time relative to the workflow run,
    # which the other steps will ensure. You do NOT need to change this cron for validation.
    - cron: "0 0 * * *" 
  workflow_dispatch: # This allows you to manually trigger the workflow from the GitHub UI

jobs:
  daily-commit: # Name for this job
    runs-on: ubuntu-latest # The type of machine to run the job on
    permissions:
      # THIS IS CRUCIAL: Grants write permissions to the GITHUB_TOKEN.
      # Without this, the workflow cannot push commits to your repository.
      contents: write

    steps:
      - name: Checkout repository # Step to get your repository's code
        uses: actions/checkout@v4 # Uses the official action to checkout your repo

      - name: Create or update a daily activity file - 23f3002037@ds.study.iitm.ac.in
        # This step's name explicitly includes your email as required by the assignment.
        # It appends the current UTC timestamp to a file named 'daily-activity.log'.
        # This creates a detectable change that Git can commit each day, fulfilling
        # the "create a commit in each run" requirement and providing "Activity Tracking".
        run: |
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") # Get current UTC timestamp
          echo "Daily update triggered on: $DATE" >> daily-activity.log # Append timestamp to file
          echo "This file tracks daily automated activity in the repository." >> daily-activity.log # Append another line

      - name: Commit and push changes # Step to commit the changes and push them
        run: |
          # Configure Git with the GitHub Actions bot's identity.
          # Using --local sets this configuration for the current repository checkout only.
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Stage the 'daily-activity.log' file for commit.
          git add daily-activity.log
          
          # Create a commit.
          # The `|| exit 0` ensures the workflow doesn't fail if, theoretically, no changes were detected
          # (though our previous step ensures changes will always be made).
          # The `[skip ci]` in the commit message tells GitHub not to trigger another workflow run
          # based on this automated commit, preventing infinite loops.
          git commit -m "Automated daily update: $(date -u +"%Y-%m-%d %H:%M UTC") [skip ci]" || exit 0
          
          # Push the committed changes to the 'main' branch of your repository.
          # IMPORTANT: Change 'main' to 'master' if your repository's default branch is named 'master'.
          git push origin main
